#include <iostream>//подключение библиотеки функции ввода-вывода
#include <cmath>//подключение математической библиотеки 
using namespace std; //подключение пространства имён std

/*
*\brief Математическая функция, рассчитывающая значение T, если первая часть пути больше половины всего участка
* \param double S - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double u1 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \return Возвращает значение-константу T
*/

double getT1(double S,double u1);


/*
*\brief Математическая функция, рассчитывающая значение T, если первая и вторая часть пути больше половины всего участка
* \param double S - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double u1 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double t1 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double u2 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \return Возвращает значение-константу T
*/

double getT2(double S, double u1, double t1, double u2);

/*
*\brief Математическая функция, рассчитывающая значение T, если условие обратно второму
* \param double S - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double t1 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double t2 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double u1 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \param double u2 - переменная, имеющая тип данных с плавающей точкой двойной точности
* \return Возвращает значение-константу T
*/

double getT3(double S,double t1, double t2, double u1, double u2);

 /*
 * \brief Точка входа в программу.
 * \return Возвращает 0 в случае успешного выполнения.
 */

int main()
{
    setlocale(LC_ALL, "Russian");
    double t1, t2, t3, u1, u2, u3, S, T;
    cout << "Введите t1, в часах: ";
    while (!(cin >> t1) || (cin.peek() != '\n') || (t1 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    cout << "Введите t2, в часах: ";
    while (!(cin >> t2) || (cin.peek() != '\n') || (t2 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    cout << "Введите t3, в часах: ";
    while (!(cin >> t3) || (cin.peek() != '\n') || (t3 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    cout << "Введите u1, в м/с: ";
    while (!(cin >> u1) || (cin.peek() != '\n') || (u1 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    cout << "Введите u2, в м/с: ";
    while (!(cin >> u2) || (cin.peek() != '\n') || (u2 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    cout << "Введите u3, в м/с: ";
    while (!(cin >> u3) || (cin.peek() != '\n') || (u3 <= 0))
    {
        cin.clear();
        while (cin.get() != '\n');
        cout << "Введите положительное число, отделяя дробную часть точкой\n";
    }
    t1 = t1 * 3600; t2 = t2 * 3600, t3 = t3 * 3600;
    S = (t1 * u1 + t2 * u2 + t3 * u3) / 2;
    cout << "Введенные данные: t1,t2,t3,u1,u2,u3=" << t1<<" Сек., " << t2<<" Сек., " << t3<<" Сек., " << u1<<" м/с, " << u2<<" м/с, " << u3 <<" м/с," << endl;
    cout <<"Длина половины пройденного участка ="<<S<<" м." << endl;
    if (u1 * t1 >= S)
    {
        const auto T = getT1(S,u1);
        cout << "Затраченное время на половину пути: " << T << " сек";
    }
    if (u1 * t1 + u2 * t2 >= S)
    {
        const auto T = getT2(S,u1,t1,u2);
        cout << "Затраченное время на половину пути: " << T << " сек";
    }
    else
    {
        const auto T = getT3(S,t1,t2,u1,u2);
        cout << "Затраченное время на половину пути: " << T << " сек";
    }
    return 0; 
}
double getT1(double S, double u1) {
    return S / u1;
}
double getT2(double S, double u1, double t1, double u2) {
    return t1 + (S - u1 * t1) / u2;
}
double getT3(double S, double t1, double t2, double u1, double u2) {
    return t1 + t2 + (S - u1 * t1 - u2 * t2) / 3;
}
